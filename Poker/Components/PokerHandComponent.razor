@inject SvgCards svgCards

@{
    if (Hand != null)
    {
        var tHand = Hand as TaiwaneseHand;
        if (tHand != null)
        {
            <div class="top-hand">
                <PokerHandComponent Hand=@tHand.TopHand ShowBlanks=@ShowBlanks PlayersSeat=@PlayersSeat />
            </div>
            <div class="middle-hand">
                <PokerHandComponent Hand=@tHand.MiddleHand ShowBlanks=@ShowBlanks PlayersSeat=@PlayersSeat />
            </div>
            <div class="bottom-hand">
                <PokerHandComponent Hand=@tHand.BottomHand ShowBlanks=@ShowBlanks PlayersSeat=@PlayersSeat />
            </div>
        }
        else
        {
            <div class="holecards">
                @{
                    int i = 0;
                    var cards = ShowBlanks ? Hand.CardCount : Bits.BitCount(Hand.CardsMask);
                    var klass = Hand.CommunityCards ? "community-cards" : "";
                    <div class="svg-hand-wrapper cards-@(cards) @(klass) ">
                        <div class="svg-hand-rotator cards-@(cards)">
                            @foreach (var card in Table.SampleDeck.CardNumbers(Hand.CardsMask))
                            {
                            <div class="svg-card-wrapper card-@(i++)">
                                @{ if (Hand.Revealed || PlayersSeat)
                                   {
                                      <div class="@Table.CardClass(card)">
                                        @(svgCards.Faces[card])
                                      </div>
                                   }
                                   else
                                    @(svgCards.BackRed)
                                }
                            </div>
                            }
                            @while (i < cards)
                            {
                                <div class="svg-card-wrapper card-@(i++)">
                                    @(svgCards.BackRed)
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        }
    }
}

@code {
  [CascadingParameter]
  public Table Table { get; set; }

  [Parameter]
  public BaseHand Hand { get; set; }
  [Parameter]
  public bool ShowBlanks { get; set; }
  [Parameter]
  public bool PlayersSeat { get; set; }
}
